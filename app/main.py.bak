import time
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from .core.config import settings
from .core.logging import init_logging
from .core.db import init_db
from .api.routes import router as api_router
from .api.auth import router as auth_router
from .api.diet import router as diet_router

init_logging(settings.LOG_LEVEL)
app = FastAPI(title=settings.APP_NAME, version=settings.VERSION)

# CORS
allow_origins = ["*"] if settings.CORS_ORIGINS == ["*"] else settings.CORS_ORIGINS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://192.168.40.184:8080","http://localhost:8080","http://127.0.0.1:8080","http://localhost:5173","http://127.0.0.1:5173"],
    allow_methods=["*"],
    allow_headers=["*"],
    allow_credentials=False,
)

@app.on_event("startup")
def _startup():
    init_db()

@app.get("/")
def read_root():
    return {"ok": True, "app": settings.APP_NAME, "version": app.version}

@app.get("/health")
def health():
    return {"ok": True, "ts": int(time.time())}

# Routers
app.include_router(api_router, prefix="/api/v1")
app.include_router(auth_router, prefix="/api/v1/auth")
app.include_router(diet_router, prefix="/api/v1")

# --- Minimal landing page (served by FastAPI) ---
from fastapi.responses import HTMLResponse

@app.get("/app", response_class=HTMLResponse)
def app_page():
    return """<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Diet App</title>
<meta name="viewport" content="width=device-width,initial-scale=1">
<style>
  body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial,sans-serif;margin:0;padding:2rem;background:#0b1020;color:#e6edf3}
  .card{max-width:720px;margin:0 auto;background:#111731;border:1px solid #1f2a44;border-radius:16px;padding:24px;box-shadow:0 10px 30px rgba(0,0,0,.25)}
  h1{margin:0 0 .25rem;font-size:1.6rem}
  .muted{color:#9fb0c3;margin:0 0 1rem}
  a.button{display:inline-block;margin-right:.5rem;margin-top:.5rem;padding:.6rem 1rem;border-radius:10px;border:1px solid #2a3a5c;text-decoration:none;color:#e6edf3}
  a.button:hover{background:#0f1a33}
  code{background:#0f1a33;border:1px solid #223457;border-radius:8px;padding:.2rem .4rem}
</style>
</head>
<body>
  <div class="card">
    <h1>Diet App</h1>
    <p class="muted">Local API is running on this host.</p>
    <p>
      <a class="button" href="/docs">Open API Docs</a>
      <a class="button" href="/health">Health</a>
      <a class="button" href="/api/v1/status">Status JSON</a>
    </p>
    <p class="muted">Tip: use <code>test@example.com</code> in <em>Authorize</em> to try protected endpoints.</p>
  </div>
</body>
</html>"""

# --- Browser root redirect to /app (keeps JSON for scripts/curl) ---
from fastapi import Request
from fastapi.responses import RedirectResponse

@app.middleware("http")
async def _root_html_redirect(request: Request, call_next):
    if request.url.path == "/" and "text/html" in request.headers.get("accept", "").lower():
        return RedirectResponse(url="/app", status_code=302)
    return await call_next(request)

# --- Simple interactive UI at /ui ---
from fastapi.responses import HTMLResponse

@app.get("/ui", response_class=HTMLResponse)
def ui_page():
    return """<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Diet App UI</title>
<meta name="viewport" content="width=device-width,initial-scale=1">
<style>
  body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial,sans-serif;margin:0;padding:2rem;background:#0b1020;color:#e6edf3}
  .card{max-width:860px;margin:0 auto;background:#111731;border:1px solid #1f2a44;border-radius:16px;padding:24px;box-shadow:0 10px 30px rgba(0,0,0,.25)}
  h1{margin:0 0 .5rem;font-size:1.6rem}
  .muted{color:#9fb0c3;margin:0 0 1rem}
  input,button{padding:.6rem .8rem;border-radius:10px;border:1px solid #2a3a5c;background:#0f1a33;color:#e6edf3}
  input{width:100%;max-width:280px;margin-right:.5rem}
  button{cursor:pointer}
  .row{display:flex;gap:.5rem;flex-wrap:wrap;margin:.5rem 0}
  pre{background:#0f1a33;border:1px solid #223457;border-radius:8px;padding:.75rem;overflow:auto}
  .grid{display:grid;gap:.75rem;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));margin-top:1rem}
  .box{border:1px solid #223457;border-radius:12px;padding:12px;background:#0f1428}
  label{display:block;font-size:.9rem;margin:.25rem 0 .25rem .1rem;color:#9fb0c3}
</style>
</head>
<body>
  <div class="card">
    <h1>Diet App — Minimal UI</h1>
    <p class="muted">Login with your account, then call protected endpoints.</p>

    <div class="grid">
      <div class="box">
        <h3>Login</h3>
        <label>Email</label>
        <input id="email" placeholder="test@example.com" value="test@example.com">
        <label>Password</label>
        <input id="password" type="password" placeholder="••••••••••">
        <div class="row">
          <button onclick="login()">Get Token</button>
          <button onclick="logout()">Logout</button>
        </div>
        <p class="muted" id="who"></p>
      </div>

      <div class="box">
        <h3>Auth: /api/v1/auth/me</h3>
        <div class="row">
          <button onclick="me()">Fetch Me</button>
        </div>
        <pre id="meOut"></pre>
      </div>

      <div class="box">
        <h3>Create Meal</h3>
        <label>Meal name</label>
        <input id="mealName" value="turkey sandwich">
        <div class="row">
          <button onclick="createMeal()">POST /meals</button>
          <button onclick="listMeals()">GET /meals</button>
        </div>
        <pre id="mealOut"></pre>
      </div>

      <div class="box">
        <h3>Groceries</h3>
        <label>Item name</label>
        <input id="gName" value="eggs">
        <label>Qty</label>
        <input id="gQty" value="12">
        <label>Unit</label>
        <input id="gUnit" value="ct">
        <div class="row">
          <button onclick="addGrocery()">POST /groceries</button>
          <button onclick="listGroceries()">GET /groceries</button>
        </div>
        <pre id="groOut"></pre>
      </div>
    </div>

    <p class="muted">Docs: <a class="button" href="/docs">/docs</a> • Health: <a class="button" href="/health">/health</a></p>
  </div>

<script>
const $ = sel => document.querySelector(sel);
const BASE = '';

function token() { return localStorage.getItem('diet_token') || ''; }
function setToken(t) { localStorage.setItem('diet_token', t || ''); updateWho(); }
function hdrs(json=true){
  const h = new Headers();
  if (json) h.set('Content-Type','application/json');
  const t = token(); if (t) h.set('Authorization','Bearer '+t);
  return h;
}
function show(id, data){ $(id).textContent = typeof data === 'string' ? data : JSON.stringify(data, null, 2); }

async function login(){
  const email = $('#email').value.trim();
  const password = $('#password').value;
  const body = new URLSearchParams();
  body.set('username', email);
  body.set('password', password);
  const res = await fetch(BASE + '/api/v1/auth/token', {
    method:'POST',
    headers: {'Content-Type':'application/x-www-form-urlencoded'},
    body
  });
  const data = await res.json().catch(()=>({}));
  if (res.ok && data.access_token){ setToken(data.access_token); }
  else { alert('Login failed'); }
}
function logout(){ setToken(''); }

async function me(){
  const res = await fetch(BASE + '/api/v1/auth/me', { headers: hdrs() });
  show('#meOut', await res.json().catch(()=>res.status+' error'));
}
async function createMeal(){
  const payload = { name: $('#mealName').value, items: [{name:'turkey',calories:180},{name:'bread',calories:140}] };
  const res = await fetch(BASE + '/api/v1/meals', { method:'POST', headers: hdrs(), body: JSON.stringify(payload) });
  show('#mealOut', await res.json().catch(()=>res.status+' error'));
}
async function listMeals(){
  const res = await fetch(BASE + '/api/v1/meals', { headers: hdrs() });
  show('#mealOut', await res.json().catch(()=>res.status+' error'));
}
async function addGrocery(){
  const payload = { name: $('#gName').value, quantity: Number($('#gQty').value), unit: $('#gUnit').value };
  const res = await fetch(BASE + '/api/v1/groceries', { method:'POST', headers: hdrs(), body: JSON.stringify(payload) });
  show('#groOut', await res.json().catch(()=>res.status+' error'));
}
async function listGroceries(){
  const res = await fetch(BASE + '/api/v1/groceries?only_open=false', { headers: hdrs() });
  show('#groOut', await res.json().catch(()=>res.status+' error'));
}
async function updateWho(){
  const t = token();
  if (!t){ $('#who').textContent = 'Not logged in'; return; }
  const res = await fetch(BASE + '/api/v1/auth/me', { headers: hdrs() });
  if (res.ok){
    const me = await res.json(); $('#who').textContent = 'Logged in as '+me.email+' (id '+me.id+')';
  } else { $('#who').textContent = 'Token invalid'; }
}
updateWho();
</script>
</body>
</html>"""
